{"meta":{"title":"小耗子杰瑞 | JERRY SHAO","subtitle":null,"description":null,"author":"JERRY SHAO","url":"https://jerryshao.com"},"pages":[{"title":"","date":"2018-06-02T10:45:57.404Z","updated":"2018-06-02T10:45:57.398Z","comments":false,"path":"categories/index.html","permalink":"https://jerryshao.com/categories/index.html","excerpt":"","text":""},{"title":"Category","date":"2017-01-30T20:07:21.000Z","updated":"2017-01-30T20:16:18.000Z","comments":true,"path":"category/index.html","permalink":"https://jerryshao.com/category/index.html","excerpt":"","text":""},{"title":"Mingjie Shao","date":"2018-06-16T04:48:48.324Z","updated":"2018-06-16T04:48:48.318Z","comments":true,"path":"about/index.html","permalink":"https://jerryshao.com/about/index.html","excerpt":"","text":"Email: com.jerryshao@jerryshao.comBlog: jerryshao.comGithub: jerry-shao Work Experience Amazon Web ServicesSystem Development Engineer Ⅰ 16/07/2018 - Present Amazon A9 Amazon SearchSearch Operations Intern (SysDE) 13/03/2017 - 01/09/2017 Marine Institute, IrelandApplications Development Intern 13/06/2016 - 02/09/2016 Education University College DublinM.Sc. Computer Science 09/2018 - 09/2020Insititute of Technology, CarlowB.Sc. Hons. Software Development 09/2014 - 06/2018 Awards I.T. Carlow President’s Volunteer Award MOOC &amp; Self Education Completed Ruby on Rails: An Introduction (Coursera) The Raspberry Pi Platform and Python Programming for the Raspberry Pi (Coursera) Android Basics NanoDegree by Google (Udacity) Introduction to Game Industry (Coursera) Introduction To Swift Programming (Coursera) Data Structures Made Easy (Coursera) Object Oriented Programming in Java (Coursera) Responsive Website Basics: Code with HTML, CSS, and JavaScript (Coursera) Computing Introduction and C Language Fundamental (Coursera) System Platform and Computing Environment (Coursera) The C++ Programming Language Foundation (XuetangX) Introduction to Computer Science and Programming Using Python (XuetangX) CCNA Routing and Switching: Introduction to Networks (Cisco) Attending Now Computer Organization (Coursera) Software Engineering (Coursera) Advanced C Programming (Coursera) Certification AWS Certified Developer Associate Oracle Certified Professional, Java SE 8 Programmer Skills Java HTML/CSS/Javascript PHP C/C++ Git Python Projects WordGame (3rd Year Assessment, using Python3, Flask, and MariaDB) Library Exhibition Website for Bill King (Marine Insititute Bursary Programme) Car Rentals (Second Year Teamwork Project using PHP&amp;MySQL) Volunteer CoderDojo Student Mentor MongoDB Documents Translator Countries I have been Create your own visited countries map or check out the JavaScript Charts. var map = AmCharts.makeChart(\"mapdiv\",{ type: \"map\", theme: \"dark\", projection: \"mercator\", panEventsEnabled : true, backgroundColor : \"#535364\", backgroundAlpha : 1, zoomControl: { zoomControlEnabled : true }, dataProvider : { map : \"worldHigh\", getAreasFromMap : true, areas : [ { \"id\": \"DK\", \"showAsSelected\": true }, { \"id\": \"FR\", \"showAsSelected\": true }, { \"id\": \"IE\", \"showAsSelected\": true }, { \"id\": \"ES\", \"showAsSelected\": true }, { \"id\": \"GB\", \"showAsSelected\": true }, { \"id\": \"CN\", \"showAsSelected\": true }, { \"id\": \"TR\", \"showAsSelected\": true }, { \"id\": \"RU\", \"showAsSelected\": true }, { \"id\": \"FI\", \"showAsSelected\": true } ] }, areasSettings : { autoZoom : true, color : \"#B4B4B7\", colorSolid : \"#84ADE9\", selectedColor : \"#84ADE9\", outlineColor : \"#666666\", rollOverColor : \"#9EC2F7\", rollOverOutlineColor : \"#000000\" } });"},{"title":"Notes","date":"2016-09-18T19:55:16.000Z","updated":"2016-10-13T23:06:06.000Z","comments":true,"path":"notes/index.html","permalink":"https://jerryshao.com/notes/index.html","excerpt":"","text":"I.T. Carlow - B.Sc. in Software Development Year3 Discrete Structure &amp; Algorithms (Data Structures Part) Discrete Structure &amp; Algorithms (Mathematics Part) Operating Systems Software Engineering for Web, Cloud and Mobile Apps Advanced Programming Web and Cloud Development(Last Update: 13/Oct/2016)"},{"title":"","date":"2018-06-02T10:45:26.051Z","updated":"2018-06-02T10:45:26.045Z","comments":false,"path":"tags/index.html","permalink":"https://jerryshao.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2018-05-11T00:37:34.897Z","updated":"2018-05-11T00:37:34.897Z","comments":true,"path":"calendar/index.html","permalink":"https://jerryshao.com/calendar/index.html","excerpt":"","text":""}],"posts":[{"title":"软技能——代码之外的生存指南 职业方面","slug":"Soft Skills: The Software Developer's Life Manual - Occupation","date":"2018-06-07T20:18:14.000Z","updated":"2018-06-13T03:31:21.373Z","comments":true,"path":"2018/06/08/Soft Skills: The Software Developer's Life Manual - Occupation/","link":"","permalink":"https://jerryshao.com/2018/06/08/Soft Skills: The Software Developer's Life Manual - Occupation/","excerpt":"亚马逊中国 - 中文纸质版 亚马逊中国 - 中文Kindle版 Amazon UK - Paperback Amazon UK - Audiobook 以下是我读完本书职业方面整理、归纳后结合自身经历得出的一些建议。 #1 远离苛性碱 有时候你会发现，有的人不管怎么样就是无法相处，有的人就是抓住一切机会贬低别人，对生活中的一切抱有消极态度。我把他们称为“苛性碱”，你最好避开他们。 如果你意识到某个人就是所谓的“苛性碱”，不要试图去改变他们，也不要试图去和他们打交道，就让他们停留在自己的轨迹上，你所要做的只是尽量限制自己与他们互动。你会发现“苛性碱人”所过之处痕迹明显，他们似乎总是卷入某种形式的悲剧之中，总是有不幸的事件发生在他们身上，他们老是把自己扮成受害者。如果你发现这种迹象，赶快跑——有多快跑多快。 对这部分人也包括一些并没有贬低别人只是无法正常沟通的人，我一直是执行三分钟原则。我只跟你聊三分钟：要么你说服我，要么我说服你。如果超过三分钟没有任何结果，我会停止无用功。因为我们当前的认知可能不在同一水平，甚至差距很大。或许几年之后我们才会意识到，当初对方或是自己是对的。 如果在这基础上还有贬低别人的习惯或是各种负能量，还是远离比较好。","text":"亚马逊中国 - 中文纸质版 亚马逊中国 - 中文Kindle版 Amazon UK - Paperback Amazon UK - Audiobook 以下是我读完本书职业方面整理、归纳后结合自身经历得出的一些建议。 #1 远离苛性碱 有时候你会发现，有的人不管怎么样就是无法相处，有的人就是抓住一切机会贬低别人，对生活中的一切抱有消极态度。我把他们称为“苛性碱”，你最好避开他们。 如果你意识到某个人就是所谓的“苛性碱”，不要试图去改变他们，也不要试图去和他们打交道，就让他们停留在自己的轨迹上，你所要做的只是尽量限制自己与他们互动。你会发现“苛性碱人”所过之处痕迹明显，他们似乎总是卷入某种形式的悲剧之中，总是有不幸的事件发生在他们身上，他们老是把自己扮成受害者。如果你发现这种迹象，赶快跑——有多快跑多快。 对这部分人也包括一些并没有贬低别人只是无法正常沟通的人，我一直是执行三分钟原则。我只跟你聊三分钟：要么你说服我，要么我说服你。如果超过三分钟没有任何结果，我会停止无用功。因为我们当前的认知可能不在同一水平，甚至差距很大。或许几年之后我们才会意识到，当初对方或是自己是对的。 如果在这基础上还有贬低别人的习惯或是各种负能量，还是远离比较好。 #2 记录与人打交道的每一个事件这个并不是日记，我也是在最近才了解到个人CRM方面的东西。简而言之就是：人际关系是需要培养的。而且今非昔比，人员流动很大，每天会遇到同事、朋友、同学等等。把与他们的交流方式（电话？面谈？邮件?）以及内容记录下来，并定期回顾，方便你对自己人际关系有一个比较好的掌控。 我目前在试用的个人人际关系管理工具是Monica，代码开源在Github。可以自己部署，也可以直接花钱买服务。我是直接使用他们的服务，5美元/月订阅制。需要一定的时间来养成习惯。 #3 建立人际关系 如果你想在同一时间里与一批人建立关系，不妨试试加入本地用户组。许多开发人员用户组通常会每周或每月聚会。如果你成为定期参加者，特别是如果你做一些报告，那你就能很快与本地公司的开发人员和招聘经理们建立起联系。 之前有参加过几次meetup，hackthon。其中质量比较高的是Google的GDG和AIB的DataHack。定期参加技术meetup确实可以帮助建立高质量的人际关系。 #4 知道公司想招什么样的人？ 知道的东西可以少一点，但是明确知道要做什么，以及怎样去做。 这一点我也是深有感触。去年在亚麻实习结束以后拿到了转正许可，我也和Mentor聊了一下为什么给我转正。他说，我们想要可以独立开展工作的人，哪怕你只是实习生。当然，接到任务有很多东西不懂很正常，但你经过同事的指点可以迅速独立工作。而且大部分资料或者难点、需要的工具、权限等等，都可以自己通过内部wiki查询，或者搜索其他人做过的类似工作和package，而不是处处问Mentor这一步应该怎么做？ 要有独立解决问题的能力。 #5 花时间提升自己 确保自己一直阅读技术书籍和博客文章，并会花些时间提升自己的技能。 我的Chrome浏览器里存了不少技术博客，常去的会直接RSS订阅，并在iOS Reeder上利用碎片化时间去看。同时也买了O’Reilly的Safari年费学生会员，可以随时看动物书系列。后面我可能会单独写个博客整理并分享一下我目前订阅或者常去的技术博客。 书中提到的另一个提升方式是读一个学位。我申请了UCD的Part-time Master in Computer Science，两年制。业余也有上Coursera上面的课程，后面我也会整理并分享一下已经上过的课程。 目前你正在自己学习些什么？确定要自学的最有价值的东西是什么，制订一份下一年的自学计划。 TODO：入职后列一个一年期的学习计划。 #6 面试需要练习 即便你现在对换新工作毫无兴趣，为了获得面试经验，你也要去面试。练习得越多，你在真正的面试时也就越游刃有余。 我上个月还挺奇怪，有个同学已经签了某公司了却还时不时去其他公司面试，可能他就是为了练习吧。不过我个人对这条建议还是持保留意见，总感觉不以换工作为目的去面试对目前的雇主和面试官都是耍流氓减分的。大家怎么看？ #7 面试也有套磁儿 即使你现在不需要努力找工作，也要整理一份清单，列出你想去工作的公司，以及你认识的这些公司的人。 在这份清单上的公司里，如果有的公司你一个人都不认识，那么制订计划至少去认识这些公司中的一位员工，并与之建立联系。 其实作者在书中讲了他本人在这方面的实施方法：确定目标公司；了解到该公司很多开发人员有写技术博客的习惯；去阅读他们的技术博客，并留下深思熟虑的评论；时间久了可以混个脸熟；面试时胜算大了很多。 #8 给别人打工/做咨询/创业？ 对大多数软件开发人员而言，特别是在职业生涯的起步阶段，做一名雇员是明智的选择。这个选择的风险最小，你不需要具备大量的经验。我倾向于认为：做一名雇员就像当学徒一样。即使你已经树立了“为自己工作”的志向，做雇员是学习并锤炼技能的良好起点。 书中列举了软件开发从业人员的三个主要方向，对每个方向也说明了优缺点。从左至右：稳定性递减，自由度和风险递增。 #9 先做专业人才 专业化的规则是：专业化程度越深，潜在的机会就越少，但获得这些机会的可能性越大。 无论你做什么，首先确保你选定了某些专业方向。市场规模决定了你的方向有多么具体，所以一定要让它尽可能地具体。你会在这个细分市场上更抢手。别担心，如果你需要，随时可以改变 做专业人才还是全面人才一直都有争论，后来也有人提出先I型后T型，也就是先做专才，再从专业领域往其他方向延伸的想法。 很多软件从业人员对自己的定位是：Java程序员、C/C++程序员等等。书中的观点是这样的定位太宽泛，比如Java可能又分Java Web Services Developer、Java Component Developer、Java Persistence API Developer等等。如果你是Java Web Services方面的专才，那么对于Java Developer和Java Web Services Developer这两个工作机会，可能对后者有更大把握。 #10 做哪方面的专才？ 在你现在或以前工作的公司里，有哪些主要的痛点？你能成为一名专门解决这些痛点的专家吗？ 有没有一种特定的工作是无人能做，或者缺乏经验丰富的人？成为这个领域的专家，你就会获得大量业务。 在各种会议上和用户组中哪些话题最常出现？ 哪类问题你回复的最多，无论是针对同事还是在Stack Overflow这样的网站上？ 以上几条可以帮助大家找到自己专长的领域。 #11 在职场提高自己的曝光度 在任何公司里能让你脱颖而出的最重要法宝就是承担更多的责任。 主动去接一些issue和task，主动去发现团队或者项目中需要提高的地方、需要自动化的地方并assign给自己。 没有人愿意涉足的领域是搜寻机会最好的地方。可能有一个没人愿意碰的遗留应用，或者代码库里的某个特别令人讨厌的模块。正因为没有人愿意碰，所以你也无需去抢，这些就成为你日益强大的帝国的领地。如果你能把沼泽变为良田，你也就展现了自己的价值。 另一种间接承担责任的方式是成为团队中其他人的导师，自愿帮助新人加速成长，为任何有需要的人提供帮助。通过介入和解决别人的问题，你不仅可以学到更多自己专业之外的知识，而且随着时间的推移，你还能在团队中逐步树立“及时雨”的名声。最终，这样的声誉可能会令你成为团队领导或者其他管理职位，只要你愿意走这条路。 敢挑重活儿难活儿可以提高自己的不可替代性。现在很多公司都有Mentor制度。 每天都记录自己的活动日志——把这个日志以周报的形式发送你的经理。 提供演讲或培训——选择一个对你的团队有用的话题。 发表意见——只要在会议上就这么做，或者只要你能得到的机会就这么做。 保证“曝光度”——定期与老板会面，确保你经常被注意到。 实习时所在的组就有每周发周报的要求，可以让领导看到你的performance。 还有一点书中提到但是我忘记标记的就是技术分享，做技术布道者。实习时所在的组有一个印度同事，平时很喜欢给新人做技术分享(他当时没有做Mentor)，也经常在家录制技术教程的视频发布在内网。那么我作为团队新人，对其他同事都不是很了解的情况下，最常接触的就是他，Mentor不在有问题就问他。这可能就是书中提到的曝光度。相比之下，那些平时不怎么说话、不怎么做技术分享的同事，我要花很久的时间才能记住他的名字 :p #12 每日站立会议中的习惯 有一次我在一个遵循Scrum过程的团队工作时，每天我们都有“每日站立会议”，说明自己已经做了什么、计划做什么、有哪些障碍。有位开发人员很特别，他总是提前写好要说的内容。每天在Scrum会议之前，他都会准备好自己的发言，而不是像我们大多数人那样开会时随口说。这是专业开发人员要养成的习惯。 说实话这一点我之前做的不好。开站立会议前没有做准备，直接导致的问题就是快轮到我的时候我在想怎么说，没有认真倾听前两个同事讲的内容。如果第一个就轮到我，很可能就边想边说了，结果就是当天的实际工作比我开会时说的其实多得多… 当然也不是每个人都有这个习惯，大概有一半的同事是提前准备好小纸片或者记录在手机上的。值得学习！ TODO: 每日站立会议前要提前计划今天、总结昨天的工作 #13 专业人士的时间管理 作为一名专业人士需要养成的另一个强大的习惯是时间管理技能。目前你擅长管理自己的时间吗？每天在开始工作之前你知道自己要做什么吗？你能很好地掌控日常任务所需的时间吗？每天提前做好计划，就能养成有效管理时间的习惯。专业人士知道每天必须要做什么工作，并且能估算出每项工作大约要花多长时间。 这里面最难的就是估算每项工作大约要花多长时间。两个极端就是要么对任务执行时间估算过长，出现大片空白时间；要么低估了任务难度，导致每天都有overdue的任务。 需要一定的时间了解自己的效率，以经验去评估任务所需时长。 #14 学会说不 一位专业人士需要知道在什么时候说“不”，即使是面对自己的老板。 书中提到的一个例子是：有个病患胳膊受伤了，本人要求截肢。但如果你是医生，经过评估后觉得可以不截肢，要学会说不。 当然这也取决于企业文化，有些公司是鼓励质疑的。专业人士应该坚持正确的决策。 #15 请勿陷入对某项技术的狂热之中 不是所有的技术都是“伟大的”，但多数被普遍应用的技术至少是“好的”。 当一个人喜欢某个编程语言或者框架，可能会偏执的认为这是最好的选择。比如在各种技术社区你常常会看到：PHP是世界上最好的编程语言！ 要根据任务需求、人力情况、社区活跃度等等，选择最合适的技术。 #16 对技术保持开放的心态 如果你愿意对技术保持开放的心态，而不是固守自己已经了解的技术，声称它是最好的，你会发现有更多的机会为你敞开大门。 技术迭代是非常迅速的，软件从业人员要保持开放的心态，接受并学习新技术，做到终生学习。 延伸阅读书中推荐的读物有： 人性的弱点 - How to Win Friends and Influence People 优秀到不能被忽视 - So Good They Can’t Ignore You 精益创业 - The Lean Startup 驱动力 - Drive: The Surprising Truth about What Motivates Us 书中关于职业部分还有与创业、产品相关的建议，我目前还没有接触这方面的东西，暂时不列入。","categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"https://jerryshao.com/tags/读书笔记/"}]},{"title":"2017实习生面经","slug":"Apply-Summer-Internship-2016-2017","date":"2017-01-15T23:36:02.000Z","updated":"2017-02-01T17:49:45.000Z","comments":true,"path":"2017/01/16/Apply-Summer-Internship-2016-2017/","link":"","permalink":"https://jerryshao.com/2017/01/16/Apply-Summer-Internship-2016-2017/","excerpt":"Keywords：爱尔兰，软件开发，大三，实习 50多天，15份简历，3次面试机会，一张offer。说实话，这个结果我既满意又不满意(跟没说一样…)。满意的是在投简历之前，我定了几个目标公司，终极目标是Google和Amazon，目标达成。不满意的是，只拿到了一张offer。","text":"Keywords：爱尔兰，软件开发，大三，实习 50多天，15份简历，3次面试机会，一张offer。说实话，这个结果我既满意又不满意(跟没说一样…)。满意的是在投简历之前，我定了几个目标公司，终极目标是Google和Amazon，目标达成。不满意的是，只拿到了一张offer。 准备9月19号学校实习宣讲，讲了大三后半学年有两个option。一个是外出实习，要求岗位与本专业相关，并且实习至少4个月。二是留校做project，时长是12周，然后答辩放假。 我在大一入学就知道有这样的安排，所以为了让自己更有竞争性吧，大二就开始找本专业实习，幸运的是我也找到了。在这顺便对找实习的劣势做一下说明。 工作经验。同班同学或者就整个爱尔兰来说，你的大部分竞争者都可能有专业相关的工作经验。 语言障碍。和本地人或者说英语是母语的人来比较，是劣势。 第二点没什么好说的，没人可以帮你。但第一点，好好规划是可以弥补的。我在大二圣诞节的时候，天天刷各大公司官网看有没有招实习生的，虽然我知道招大二学生的可能性连个位数都不到。但至少可以看看一线公司对本专业的在校学生具体要求是什么，可以通过一年的时间去了解相关技术。 2016年1月底投了几个大二实习的简历；2月底得知进shortlist；3月10号电话面试；3月底拿offer；6月初Induction Day；6月13号入职。在Marine Institute(爱尔兰国家海洋研究所)实习了3个月，职位是Applications Development Bursar。 这就是我第一段实习经历。也很感谢最后Supervisor给的推荐信，在申请大三实习的过程中，这个推荐信起了很大作用。 推荐信 9月21号开始投递简历。 导师一下群发了十几封邮件，都是相关的实习机会。其实我想说，等导师给你群发工作机会再投简历，算是输在起跑线上了。从9月开学到实习宣讲，我几乎每天都刷喜欢的公司官网还有glassdoor。因为导师收集到的实习机会其实也是公开在公司网站上的。不一样的是，自己挖掘到的绝对比导师发给你的岗位多的多。这一部分岗位也叫hidden opportunity，它就在网上，只是没人会喂到你嘴里，要自己去找。 所以在导师群发邮件的当天，我早就把实习机会做了筛选，一下投了9份简历。 Aol.(美国在线)9月27号得到Aol.(美国在线)线上测试的通知。我也是有点急，放学回家马上就做了。HackerRank，45分钟，10道题。前5道是单选，前端和java基础。后面是数据结构，比如Binary Search Tree某些Operation的实现。 9月28号下午收到Aol.的邮件，让我10月4号去Dublin面试。效率非常快。 10月4号去之前在Glassdoor上面看了一下考试讨论的一些面试题，都说Aol.的面试都是非常基础的问题。 我的面试也印证了这一点。大概的问题有： 什么是一个比特？ 说几个数据结构 在一个html文件中，当你想要引入一个JavaScript文件的时候，有几种方式。外部引用的话，引用代码放在哪里比较好，为什么？ 都是一些很简单的问题，不过确实有同学被what’s a bit给问懵了。 大概回答了10个问题之后，考官根据你答的情况决定下面题目的难度。也就是说，不用怕最后答不上来。他就是要问到你说不会为止，这种情况下是知道你有一定水平了，但是还想知道你现在的上限在哪？ 接下来是Programme Manager问一些简历上的问题以及之前的工作经验。 面试完自我感觉还可以，等待的时间也说明离Offer很接近了。因为在那之后一直在说还想等等看其他考生的情况，所以直到11月9号我收到Aol.邮件，他们说最后在我和另一个学生里面选了另一个。 Aol. Failed… Amazon 第一次(Software Development Engineer)10月3号得知进面试。 10月6号去Amazon Dublin面试。班里包括我一共有4个人进了面试。一共三轮，每轮30分钟。这三轮分别是Problem Solving，Data Structure，Programme Manager。跟Aol.相比，Amazon面试真的是难很多，当然也有热身的过程。比如问Map的插入操作，时间复杂度和空间复杂度之类的BigO问题。 Data Structure最后一个题是Graphic相关的，没答好。Problem Solving把问题解决了，在考官帮助下把算法优化了一下。Programme Manager是印度人，口音重，交流不顺畅。 面试完一个半小时接到电话，Failed。但这个速度太快了，后来导师跟我们说Amazon一直这样。因为所有人都很忙，可能今天面完过几天再做决定的话仅靠当时纸上的分数并不能做出最正确的决定。而且像这种大公司，招人并没有明确的人数限制。所有他们面完马上开个小组会商量一下今天面的几个人，要或不要马上就做出决定。 Amazon 第二次(System Development Engineer)在Amazon第一次面试失败后我又补投了Riot Games(拳头公司)等等，一直没消息。然后基本决定留校做project了。 转机来了，Amazon突然又放出了一个System Development Engineer Internship的岗位，说跟之前的SDE有区别，让仔细看Spec. 11月10号得知再次进面试。 11月15号去Dublin面试。面试结构还是一样的，三轮每轮30分钟。 但内容有点不一样：Programme Manager，Linux&amp;Networking，Problem Solving顺序也和之前一次不一样，第一轮是PM面。相当于上来先是谈话节目，考官是DNS部门的Leader，他很喜欢也很好奇我简历上有很多很多在Coursera上自学的相关内容。问我为什么要学这些？时间是怎么安排的？要学的东西是你感兴趣还是说这些技术是你的短板？另外看我简历上在CoderDojo做志愿者，问我为什么要去？ 我的回答大概就是学校学的吃不饱阿，自己感兴趣之类的。时间上谈了一些Time Management和效率上的问题。要学的东西我说根据当年学校的课程设置，有时候在网上提前学下一年的内容，有时候学校的课程虽然考试通过了，但是觉得有必要再深入学一下就上相关的网课blabla…志愿者的事情，我说我大概也是10-12岁左右的时候在学校里学的HTML，在自己掌握的这部分知识上，尽自己所能，做一些分享。让喜欢编程的孩子在课外能有地方把兴趣进一步延伸。 可能是PM面起到了热身作用吧，后面两轮都答的很好。(因为这个offer签了保密协议，技术上的面试题不方便透露) 因为有之前的经验，开车回家的路上我就在等电话。大概过了半个小时，还没上M50就来电话了。开着免提，告诉我面试通过了，接下来会转到HR那边。 Offer前后折腾了很久，因为过去七年在爱尔兰之外居住过超过一年(中国)。不仅要做爱尔兰的background checking，中国的也要做。好在这周终于签了合同，十几份文件。被分到了Amazon Data Services，Search Operation组。申请实习的事情就算圆满结束了。(写的比较仓促，后面会继续修改补充)","categories":[],"tags":[]},{"title":"我的2016","slug":"My-2016","date":"2016-12-23T12:09:07.000Z","updated":"2016-12-23T18:02:26.000Z","comments":true,"path":"2016/12/23/My-2016/","link":"","permalink":"https://jerryshao.com/2016/12/23/My-2016/","excerpt":"观影和读书先说说2015年底定的观影和读书目标。 计划看120部电影，读20本书；实际看了108部电影，读了10本书。两项都没有完成。观影量已经很接近了，而且这个量也可以接受。而这一年真正从头到尾读完的书不过10本，跟目标差距非常大，当然还有很多技术书籍只是按需读相应的章节，后面我整理一下短评再发书单。这10本里，按阅读方式分，9本在Kindle上读完，1本在车上听完；按时间段分，暑期实习的3个月读了5本，其它时间读了5本。阅读方式上没说的，Kindle是主力。在阅读时间上，实习期间每天上午下午各15分钟的Tea Time是我固定用来喝咖啡读书的；在校期间，基本都是午餐间隔、睡觉前、等人等等这种碎片化时间。这一年也在网上看了一些读书方法的分享，需要做一些改进。一是读书方法上，2017年要读的第一本书就是How to read a book，并不是每一本书都要从头到尾一字一句的读。二是减少碎片化阅读时间，制定固定的阅读时间。阅读就像看剧一样，是需要前情回顾的，也好比计算机的Context Switching，频繁地在两个上下文环境切换，有效的程序执行时间并不多。 2017计划看90部电影，读24本书。","text":"观影和读书先说说2015年底定的观影和读书目标。 计划看120部电影，读20本书；实际看了108部电影，读了10本书。两项都没有完成。观影量已经很接近了，而且这个量也可以接受。而这一年真正从头到尾读完的书不过10本，跟目标差距非常大，当然还有很多技术书籍只是按需读相应的章节，后面我整理一下短评再发书单。这10本里，按阅读方式分，9本在Kindle上读完，1本在车上听完；按时间段分，暑期实习的3个月读了5本，其它时间读了5本。阅读方式上没说的，Kindle是主力。在阅读时间上，实习期间每天上午下午各15分钟的Tea Time是我固定用来喝咖啡读书的；在校期间，基本都是午餐间隔、睡觉前、等人等等这种碎片化时间。这一年也在网上看了一些读书方法的分享，需要做一些改进。一是读书方法上，2017年要读的第一本书就是How to read a book，并不是每一本书都要从头到尾一字一句的读。二是减少碎片化阅读时间，制定固定的阅读时间。阅读就像看剧一样，是需要前情回顾的，也好比计算机的Context Switching，频繁地在两个上下文环境切换，有效的程序执行时间并不多。 2017计划看90部电影，读24本书。 MOOC通过了5门Coursera上的MOOC课程，1门Udacity上的Nanodegree。 大二6月获知大二成绩，保持了First Class的成绩。 暑期实习Jun. 13th - Sep. 2nd(12周，最后一周休带薪假)在Marine Institute, Ireland实习。项目是Library Exhibition Website for Bill King，两人组(我和一个Library实习生)，每人各有一个Supervisor做指导。我负责技术部分，她负责材料归档。大部分实习岗是8周的项目，所以单位要求所有实习生在第7周展示项目并答辩。和搭档在Supervisor的指导下一起获得了团队项目一等奖。 实习合影：从左至右，本人、搭档、实习主管 OCA实习的同时一直在备考OCA，7月份在Galway考过，顺利拿到了Oracle Certified Associate, Java SE 8 Programmer。最近又预约了OCP Java SE 8 Programmer的考试，明年4月。 大三9月开始终于可以在UNUM实验室上课，带宽实测108Mbps。再也不用在图书馆抢座了。学校新开了Cybercrime and IT Security专业，所以系里对大二以上的课程进行了重新编排、整合。加了不少新课，Past Exam Papers也就没用了。每周31.5学时，比较累。希望能保持住First Class，明年申个好学校。 申请2017实习Sep. 21st - Nov. 15th投了15份简历，获得3次面试机会，最终被Amazon Web Services(Dublin)录取为System Development Engineer Internship。等签完合同我会写一篇面经。 PyCon Ireland &amp; Google Algorithms Workshop参加了2016 Python Conference Ireland。导师Paul Barry在day1和day2各有一场演讲，我只听了day1关于Python异常处理的，收获很大。 在PyCon Ireland上的合影 参加了Google Algorithms Workshop, Dublin。跟Google工程师和其它参会学生一起解决了一些算法问题。Google在100多申请者的CV里选了20个学生参会，通过和他们的交流，感受是一句话：人外有人，天外有天。 CoderDojo做了两期志愿者，每期7周。教6-12岁的爱尔兰青少年写代码，第一期HTML&amp;CSS、Python，第二期JavaScript。在我为数不多的实习面试机会里，每次面试官都提到了CoderDojo。每家公司都说他们是Dublin的CoderDojo组织者… 博客和2017接下来我会经常更新博客，多写东西，多记录。希望2017实习顺利、申研顺利。","categories":[],"tags":[]},{"title":"Install the latest mysql-connector-python on windows","slug":"install-latest-mysql-connector-on-windows","date":"2016-11-25T08:13:06.000Z","updated":"2016-12-17T17:06:31.000Z","comments":true,"path":"2016/11/25/install-latest-mysql-connector-on-windows/","link":"","permalink":"https://jerryshao.com/2016/11/25/install-latest-mysql-connector-on-windows/","excerpt":"","text":"Download the latest release from github. Download Extract the zip file. Open your terminal under the extracted folder. Make sure you have execution permission. 1sudo chmod u+x . Build this modual. 1py ./setup.py build Install this modual. 1py ./setup.py install","categories":[],"tags":[]},{"title":"Introduction to Git & Github","slug":"Introduction-to-Git-Github","date":"2016-10-08T22:55:22.000Z","updated":"2016-12-17T17:10:15.000Z","comments":true,"path":"2016/10/09/Introduction-to-Git-Github/","link":"","permalink":"https://jerryshao.com/2016/10/09/Introduction-to-Git-Github/","excerpt":"What’s git Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. What’s github GitHub is a web-based Git repository hosting service. It offers all of the distributed version control and source code management (SCM) functionality of Git as well as adding its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project.","text":"What’s git Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. What’s github GitHub is a web-based Git repository hosting service. It offers all of the distributed version control and source code management (SCM) functionality of Git as well as adding its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project. How to set up your git environment Mac OSOpen Terminal, and follow the steps below skip step 1~2. Windows Download Github Desktop for Windows Open Github Shell Config global setting 12git config --global user.name \"Jerry Shao\"git config --global user.email \"jerryshao@example.com\" Generate your ssh key 1ssh-keygen -t rsa -C \"youremail@example.com\" Copy your ssh key 12cd ~/.sshcat id_rsa.pub How to set up your github account Once your github account has been created, go to Settings - SSH&amp;GPG Keys page, paste your ssh key as a new record. Create your first open-source project Create &amp; initialize your git project Create a new repository on github. Create your project folder 1mkdir ~/Test Initialize as a git project 12cd ~/Testgit init Remote with github projectCopy your github repository address12cd ~/Testgit remote add origin \"your github repo address\" Add &amp; commit your project code Create a new file 1echo \"This is my first git project\" &gt;&gt; READEME.MD Add this file into your project temp storage 1git add . Commit this file 1git commit -m \"This is my first commit\" -m: message for this commit. Push to github1git push origin master Once you finish these steps, your first git project is ready to view on github.","categories":[],"tags":[{"name":"git, github","slug":"git-github","permalink":"https://jerryshao.com/tags/git-github/"}]},{"title":"爱尔兰驾照——路考篇","slug":"how-to-get-full-driving-license-in-ireland","date":"2016-07-08T22:58:01.000Z","updated":"2016-07-17T22:18:12.000Z","comments":true,"path":"2016/07/09/how-to-get-full-driving-license-in-ireland/","link":"","permalink":"https://jerryshao.com/2016/07/09/how-to-get-full-driving-license-in-ireland/","excerpt":"从Learner Permit到Full License的基本流程 拿到Learner Permit 完成12学时及以上的驾驶课程 自Learner Permit签发之日起满6个月后申请路考 参加路考 申请Full License","text":"从Learner Permit到Full License的基本流程 拿到Learner Permit 完成12学时及以上的驾驶课程 自Learner Permit签发之日起满6个月后申请路考 参加路考 申请Full License 申请Learner Permit接之前的爱尔兰驾照考试-理论篇，在通过Theory Test之后，会现场签发一张约B5尺寸的Cert of Competency，然而这张证明并不是L驾照。还需要凭此证明申请正式的L驾照。 所需材料 D201申请表 PPS卡(俗称税卡) Cert of Competency D502视力检测报告 6个月内address proof(Bank Statement最佳) GNIB 护照 35欧工本费 D502视力检测报告按照规定，申请者需要前往视力检测机构做视力检测，大部分眼镜店均提供此项服务，价格约15-20欧元。需要注意的是，有些眼镜店需要提前预约，所以最好提前安排好时间，因为视力检测报告的有效期为一个月。D502表格可以自行打印携带，也可以直接去做检测，眼镜店都有打印好的表格免费提供。 提示 所有身份证明如GNIB、护照，现场复印后直接退还原件，所以不会影响办签证之类的需求。 办理周期为5-7个工作日，邮寄到申请表所填写的地址。 驾驶课程拿到L驾照后就可上驾驶课程了。Driving Instructor可以是朋友推荐，也可自己在RSA上面查询自己所在地的注册教练，并致电咨询预约课程(费用约为30-40欧元每学时(1学时=1小时)，不同地方有差价，另外一次性付清12课时可能有优惠) 报名路考路考的报名条件 自L驾照签发之日起已满6个月 已完成12学时及以上的驾驶课程 考试车辆自行提供(可使用自购车、租用教练车等等) 提示 报名候考时间约为10-12周，可在RSA查看官方估计的候考时间 报名考试时不会查验是否持有L驾照6个月以上。如需缩短周期，可以在持有L驾照第4-5个月时开始申请考试。候考结束安排考试时间时满足6个月即可。 在线报名入口 参加路考所需材料 考试车，三标齐全(Tax, NCT, Insurance) L驾照 考试预约单(Optional) 基本流程 提前15分钟抵达考试中心，在候考室候考 考官喊到名字后进入考官办公室，出示L驾照 回答5个道路安全题目(主要为道路标示口试) 同考官走出考试中心，考官对考试车辆查验三标 进入考试车，按考官指示检测汽车转向灯、刹车灯、驻车灯等等 按考官指示打开汽车引擎盖，指认汽车主要部件(如：汽车制动液，汽车转向助力液，冷却液等等) 考官坐进副驾驶，按考官指示检测车内二级控制设备(如：车窗加热除雾，应急灯等等) 启动车辆，按考官指示行驶，并进行掉头、L倒车等操作 约30-45分钟后返回考试中心 考官对行车过程中iPad上的相关记录进行二次核查并告知考试结果 如通过，考官发给Full License申请表及行车报告和Cert of Competency。如未通过，仅发给行车报告。 申请Full License基本流程与申请Lerner Permit一致。 所需材料 D401申请表 PPS卡(俗称税卡) Cert of Competency 6个月内address proof(Bank Statement最佳) GNIB 护照 55欧工本费(适用于10年有效期的长期驾照) 题外话驾照除了作为在爱尔兰具备小型客车的驾驶资质，还可以作为身份ID使用。即在爱尔兰，在任何需要出示ID的场所，均可以使用驾照(这里指的驾照也包括Lerner Permit)。如在超市买酒、取邮政包裹、乘坐飞机等等。这样就可以减少携带护照的次数，降低丢失护照的可能性。部分场合GNIB无法作为ID使用，所以考一个驾照哪怕是L驾照也是非常方便的。","categories":[],"tags":[]},{"title":"Alternative syntax in PHP","slug":"Alternative-syntax-in-PHP","date":"2016-06-19T10:37:17.000Z","updated":"2016-06-19T17:25:02.000Z","comments":true,"path":"2016/06/19/Alternative-syntax-in-PHP/","link":"","permalink":"https://jerryshao.com/2016/06/19/Alternative-syntax-in-PHP/","excerpt":"In PHP, there are a lot of alternative syntax. It can improve the legbility of your code. if, while, for, foreach, switchThe alternatice syntax in control structures is to remove the openning brace instead of a colon and closing with endif, endwhile, endfor, foreach, and endswitch. if, endif123&lt;?php if ($a == 5): ?&gt;A is equal to 5&lt;?php endif; ?&gt; while, endwhile123&lt;?php while ($a &lt; 5): ?&gt;&lt;?php print $a++; ?&gt;&lt;?php endwhile; ?&gt; Output:101234 Remember, do not use any indent in this case.","text":"In PHP, there are a lot of alternative syntax. It can improve the legbility of your code. if, while, for, foreach, switchThe alternatice syntax in control structures is to remove the openning brace instead of a colon and closing with endif, endwhile, endfor, foreach, and endswitch. if, endif123&lt;?php if ($a == 5): ?&gt;A is equal to 5&lt;?php endif; ?&gt; while, endwhile123&lt;?php while ($a &lt; 5): ?&gt;&lt;?php print $a++; ?&gt;&lt;?php endwhile; ?&gt; Output:101234 Remember, do not use any indent in this case. for, endfor123&lt;?php for ($i = 0; $i &lt; 5; $i++): ?&gt;&lt;?php print $i; ?&gt;&lt;?php endfor; ?&gt; Output:101234 foreach, endforeach123&lt;?php foreach (array(0, 1, 2, 3, 4) as $i): ?&gt;&lt;?php print $i; ?&gt;&lt;?php endforeach; ?&gt; Output:101234 switch, endswitch123456789&lt;?php switch (0): ?&gt;&lt;?php case 0: ?&gt;&lt;?php print 0; ?&gt;&lt;?php break; ?&gt;&lt;?php case 1: ?&gt;&lt;?php print 1; ?&gt;&lt;?php default: ?&gt;&lt;?php print \"\"; ?&gt;&lt;?php endswitch; ?&gt; Output:10 Remember, do not use indent in any case above. All the intent will be print out as whitespaces.Example:123&lt;?php if (true): ?&gt; &lt;?php print \"hello world\"; ?&gt;&lt;?php endif; ?&gt; Output:1hello world Other tricky thingsecho, printBoth of them can let us get output123&lt;?php echo \"hello world\"; ?&gt;&lt;?php print \"hello world\"; ?&gt;&lt;?php print(\"hello world\"); ?&gt; Output:123hello worldhello worldhello world print will return 1, echo won’t.123&lt;?php $printReturn = print \"print\"; ?&gt; // valid&lt;?php $echoReturn = echo \"echo\"; ?&gt; // invalid&lt;?php print $printReturn; ?&gt; Output:1print1 Concatenate multiple arguments123&lt;?php echo \"hello \", \"world\", \"\\n\"; ?&gt;&lt;?php echo \"hello \" . \"world\" . \"\\n\"; ?&gt;&lt;?php print \"hello \" + \"world\" + \"\\n\"; ?&gt; In addition, &lt;?=&quot;hello world&quot;?&gt; will be treated as &lt;?php echo &quot;hello world&quot; ?&gt;.Print and echo roughly have same speed, so if you use one over the other, it may not improve the performance of your application. if (isset($value)), if ($value)1234567891011&lt;?php if (isset($value)): ?&gt; // It will only check whether you defined that variable....&lt;?php endif; ?&gt;&lt;?php if ($value): ?&gt; // It can be used only if you have defined the variable. If it is default value, return false....&lt;?php endif; ?&gt;// 0, false, \"\" are default values.&lt;?php $value = 0; ?&gt;&lt;?php if ($value): ?&gt; // false&lt;?php endif; ?&gt; AND - &amp;&amp;, OR - ||&amp;&amp;, || have higher priority than AND, OR12&lt;?php $value = true &amp;&amp; false; ?&gt; // $value = false&lt;?php $value = true AND false; ?&gt; // $value = true","categories":[],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://jerryshao.com/tags/PHP/"}]},{"title":"如何在Ubuntu Server16.04上安装Nginx1.10.0 PHP7 MySQL5.7","slug":"how-to-install-nginx-php7-mysql-on-ubuntu16-04","date":"2016-06-07T11:05:19.000Z","updated":"2016-12-23T14:30:41.000Z","comments":true,"path":"2016/06/07/how-to-install-nginx-php7-mysql-on-ubuntu16-04/","link":"","permalink":"https://jerryshao.com/2016/06/07/how-to-install-nginx-php7-mysql-on-ubuntu16-04/","excerpt":"本教程以运行在vagrant上的ubuntu-16.04-server为例 安装PHP71sudo apt-get install php-fpm [Option]通过php -v命令确认安装版本为PHP7 Imgur [Test]在/var/www/html目录下新建index.php文件1sudo vi /var/www/html/index.php 按i进入编辑模式，左下角出现insert。使用phpinfo()输出php环境信息。123&lt;?php phpinfo();?&gt; 按ESC键退出编辑模式，左下角insert消失。输入:wq命令保存并退出，或连续按两次Z使用快捷键保存并退出。","text":"本教程以运行在vagrant上的ubuntu-16.04-server为例 安装PHP71sudo apt-get install php-fpm [Option]通过php -v命令确认安装版本为PHP7 Imgur [Test]在/var/www/html目录下新建index.php文件1sudo vi /var/www/html/index.php 按i进入编辑模式，左下角出现insert。使用phpinfo()输出php环境信息。123&lt;?php phpinfo();?&gt; 按ESC键退出编辑模式，左下角insert消失。输入:wq命令保存并退出，或连续按两次Z使用快捷键保存并退出。 安装Nginx1sudo apt-get install nginx 安装完成后，Nginx默认直接启动。通过命令curl localhost查看localhost/index.nginx-debian.html页面源代码，可以确认Nginx运行正常。 Imgur 或通过浏览器访问https://localhost:8080/index.nginx-debian.html Imgur 修改Nginx配置文件(/etc/nginx/sites-available/default)，使其解析PHP文件。1sudo vi /etc/nginx/sites-available/default 按i进入编辑模式，左下角出现insert。将Default server configuration下面的默认server配置替换为12345678910111213141516171819202122server &#123; listen 80 default_server; listen [::]:80 default_server; root /var/www/html; index index.php index.html index.htm index.nginx-debian.html; server_name localhost; location / &#123; try_files $uri $uri/ =404; &#125; location ~ \\.php$ &#123; include snippets/fastcgi-php.conf; fastcgi_pass unix:/run/php/php7.0-fpm.sock; &#125; location ~ /\\.ht &#123; deny all; &#125;&#125; (即：在index添加index.php默认解析主页，取消.php的location注释)按ESC键退出编辑模式，左下角insert消失。输入:wq命令保存并退出，或连续按两次Z使用快捷键保存并退出。[Test] 如有其它配置修改，可使用sudo nginx -t检测配置文件是否有语法错误重新启动Nginx服务1sudo service nginx restart [Test]使用curl localhost 即可看到phpinfo()输出PHP7运行环境的HTML源代码，或通过浏览器访问localhost Imgur 安装MySQL5.71sudo apt-get install mysql-server 设置MySQL root用户的密码 Imgur 再次输入密码进行确认 Imgur 登录MySQL1mysql -uroot -p Imgur 至此，Nginx1.10.0+PHP7+MySQL5.7全部安装完毕。","categories":[],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://jerryshao.com/tags/Ubuntu/"}]},{"title":"Hexo3同时发布到多个仓库","slug":"Hexo3同时发布到多个仓库","date":"2016-03-21T18:03:28.000Z","updated":"2016-03-21T20:20:16.000Z","comments":true,"path":"2016/03/22/Hexo3同时发布到多个仓库/","link":"","permalink":"https://jerryshao.com/2016/03/22/Hexo3同时发布到多个仓库/","excerpt":"博客很久没有更新，最近看到Hexo的最新版本已经是3打头了，决定升级继续写博客。然而升级的过程像大部分新产品一样，新特性往往用不到，真正用到的坑又多了一些。折腾了近一周，终于又可以像往常一样使用 Hexo g -d 同时发布到两个git平台。下面记录一下遇到的坑和solution。 Problem 1. Hexo deployer报错 文章Generate正常，进行Deploy时报错。1ERROR Deployer not found: git Solution:1npm install hexo-deployer-git --save 具体可以查看Hexo3 Wiki和Issue#1013。","text":"博客很久没有更新，最近看到Hexo的最新版本已经是3打头了，决定升级继续写博客。然而升级的过程像大部分新产品一样，新特性往往用不到，真正用到的坑又多了一些。折腾了近一周，终于又可以像往常一样使用 Hexo g -d 同时发布到两个git平台。下面记录一下遇到的坑和solution。 Problem 1. Hexo deployer报错 文章Generate正常，进行Deploy时报错。1ERROR Deployer not found: git Solution:1npm install hexo-deployer-git --save 具体可以查看Hexo3 Wiki和Issue#1013。 Problem 2. 无法同时发布到多个git平台 包括我在内的一部分人在使用Hexo时，是同时把文章发布到多个git平台的，即使用多个git pages服务。如：github pages和coding pages(原gitcafe pages服务)。然后将国内线路解析到coding pages上，将国外线路解析到github pages上，以保证访问速度和体验。在升级Hexo3之后，同样遇到了文章Generate正常，进行Deploy时报错。1FATAL fatal: remote part of refspec is not a valid name in HEAD: master 在使用Hexo2时，同时发布到多个git平台一般会使用下面的_config.yml配置：12345deploy: type: git repo: github: git@github.com:jerry-shao/jerry-shao.github.io.git, master gitcafe: git@gitcafe.com:jerryshao/jerryshao.git, gitcafe-pages Solution 在迁移至coding pages服务后，需要在coding的项目页面手动开启pages服务。这里有一点改进就是coding的pages服务不限定branch的名称，可以自定义pages服务映射的branch。这里我们为了方便，将coding pages这边的branch也改成master。 _config.yml中的deploy也与之前的写法不同，经过多次尝试，以下配置可以同时发布文章到多个平台。123456deploy: type: git repo: github: git@github.com:jerry-shao/jerry-shao.github.io.git coding: git@git.coding.net:jerry_shao/jerryshao.io.git branch: master 经过修改后使用 Hexo g -d 就可以同时发布到github和coding了。","categories":[{"name":"Web","slug":"Web","permalink":"https://jerryshao.com/categories/Web/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jerryshao.com/tags/hexo/"}]},{"title":"教育部留学服务中心存档攻略","slug":"personal-archivals","date":"2015-08-14T08:31:49.000Z","updated":"2016-03-21T20:21:34.000Z","comments":true,"path":"2015/08/14/personal-archivals/","link":"","permalink":"https://jerryshao.com/2015/08/14/personal-archivals/","excerpt":"教育部留学服务中心于1997年成立”留学人员档案室”，专门从事出国留学人员人事档案的管理工作，集中统一，归口管理，解决了留学人员的后顾之忧。 1. 存放在留学服务中心的好处 丰富个人档案，内含出国留学完整的档案材料。 回国学历认证简化手续。","text":"教育部留学服务中心于1997年成立”留学人员档案室”，专门从事出国留学人员人事档案的管理工作，集中统一，归口管理，解决了留学人员的后顾之忧。 1. 存放在留学服务中心的好处 丰富个人档案，内含出国留学完整的档案材料。 回国学历认证简化手续。 2. 办理流程 登录教育部留学服务中心留学档案在线服务系统，注册账号并填写个人信息。 所需材料 护照个人信息页复印件一份 学校Offer复印件一份，已在外留学的还需提供在读证明信或者学生证复印件一份 留学国家签证复印件一份 存档学生身份证复印件一份 前往教育部留学服务中心，递交材料，领取调档通知单并回档案原籍调档。若档案已在学生手中，留学服务中心不予接收 将个人档案送至留学服务中心或通过邮寄方式寄送。 EMS标准快递地址：北京市海淀区北四环西路56号 辉煌时代大厦六层 邮编：100080 收件人：教育部留学服务中心档案室 电话：010-62677800 机要邮寄地址：北京市海淀区学院路15号 教育部留学服务中心留学人员档案室 邮编：100083 密封自带 3. Tips 每年夏季为学历认证、档案存取高峰期，教育部留学服务中心会采取每日限号措施。建议早上7点前往取号。","categories":[{"name":"留学","slug":"留学","permalink":"https://jerryshao.com/categories/留学/"}],"tags":[{"name":"留学生活","slug":"留学生活","permalink":"https://jerryshao.com/tags/留学生活/"}]},{"title":"Git同时推送到多个远程库","slug":"push-to-two-repos","date":"2015-08-09T14:16:30.000Z","updated":"2016-03-21T20:22:36.000Z","comments":true,"path":"2015/08/09/push-to-two-repos/","link":"","permalink":"https://jerryshao.com/2015/08/09/push-to-two-repos/","excerpt":"在有些情况下，我们希望将项目同时关联到多个远程库，并一次性推送到多个远程库。这里我们以同时推送到Github和Gitcafe为例，操作系统为OS X。 1. 创建本地git仓库 创建项目文件夹，并将其初始化为git仓库。 123mkdir ~/github/testGitcd ~/github/testGitgit init","text":"在有些情况下，我们希望将项目同时关联到多个远程库，并一次性推送到多个远程库。这里我们以同时推送到Github和Gitcafe为例，操作系统为OS X。 1. 创建本地git仓库 创建项目文件夹，并将其初始化为git仓库。 123mkdir ~/github/testGitcd ~/github/testGitgit init ### 2. 创建远程仓库—— 在Github创建远程仓库。 在GitCafe创建远程仓库。 ### 3. 将本地仓库关联至远程仓库——- 关联至Github 1git remote add github 'git@github.com:jerry-shao/testGit.git' 关联至GitCafe 1git remote add gitcafe 'git@gitcafe.com:jerryshao/testGit.git' 配置仓库关联属性 12cd ~/github/testGit/.gitvi config 打开config文件后，我们可以看到下图中含有我们之前操作的两条remote记录。 将两条remote记录合并 保存并退出，可连续输入两个大写Z。即shift+zz。 4. 推送至两个远程库 新建一个README.MD文件 1vim README.MD 输入#testGit， 保存并退出。 commit并push到远程库 123git add .git commit -m \"readme\"git push tworepo master 两个远程仓库均推送成功。","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"https://jerryshao.com/tags/Git/"}]},{"title":"初次使用Hexo遇到的一些问题","slug":"transfer-to-hexo","date":"2015-07-29T14:40:46.000Z","updated":"2016-03-21T20:20:48.000Z","comments":true,"path":"2015/07/29/transfer-to-hexo/","link":"","permalink":"https://jerryshao.com/2015/07/29/transfer-to-hexo/","excerpt":"今天把Blog从Wordpress迁移到了Hexo，初次使用静态Blog，遇到了一些问题，整理如下。( 部分问题可能仅存在于OS X系统 ) 安装Hexo报错安装流程是按照Node.js官方指导，下载安装包一步一步安装，Node.js和npm同时由Node.js提供的包安装。 此时执行 12node -vnpm -v 版本号正常显示 问题：安装Hexo，执行以下命令时报错。 1npm install hexo-cli -g","text":"今天把Blog从Wordpress迁移到了Hexo，初次使用静态Blog，遇到了一些问题，整理如下。( 部分问题可能仅存在于OS X系统 ) 安装Hexo报错安装流程是按照Node.js官方指导，下载安装包一步一步安装，Node.js和npm同时由Node.js提供的包安装。 此时执行 12node -vnpm -v 版本号正常显示 问题：安装Hexo，执行以下命令时报错。 1npm install hexo-cli -g 因错误信息中注明no permission to access，以为是权限问题。 然后执行命令 1sudo npm install hexo-cli -g 错误依然抛出。 后来在StackOverflow找到解决办法： 原因出在OS X版npm安装包上，需要下载npm源代码重新Make并安装。 通过执行以下命令下载npm源代码重Make并安装 123git clone http://github.com/isaacs/npm.gitcd npmsudo make install 安装Hexo 1sudo npm install hexo-cli -g 此时hexo已经正确安装。 更改主题后本地显示正常，部署后无法加载CSS使用默认主题landscape时，本地和部署后都可以正常显示。然而更换主题后，本地测试正常，部署后排版错乱，显然没有正确加载所需的CSS样式。 问题出在Hexo站点根目录的_config.yml文件上。 解决方法： 最初测试时，为了不影响站点使用，我将站点绑定至二级域名pages.jerryshao.com，并将_config.yml文件中url属性设置为pages.jerryshao.com，此时本地和远端均正常显示。 在将根域名解析过去以后，_config.yml中url属性没有及时更改，且该属性不会影响本地测试。将url改为新的网站地址，CSS样式加载正常，问题解决。 在几个平台回答了遇到同样问题的网友，大概都是因为忘记修改_config.yml文件中url属性所致。","categories":[{"name":"Web","slug":"Web","permalink":"https://jerryshao.com/categories/Web/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jerryshao.com/tags/hexo/"}]},{"title":"爱尔兰驾照考试-理论篇","slug":"爱尔兰驾照考试-理论篇","date":"2015-05-18T10:18:46.000Z","updated":"2016-02-28T13:03:00.000Z","comments":true,"path":"2015/05/18/爱尔兰驾照考试-理论篇/","link":"","permalink":"https://jerryshao.com/2015/05/18/爱尔兰驾照考试-理论篇/","excerpt":"爱尔兰承认中国驾照吗不承认。当然很久之前我也从网上看到过一条消息，说中国大陆驾照经过翻译认证可以在爱尔兰驾驶一年，这个没有亲测过，所以不推荐遵循这条消息。官方的解释是需要考取理论驾照、全驾照，不承认中国大陆驾照。如果你有其它国家的驾照，特别是EU国家，就有区别了。班上有个立陶宛的同学，他有立陶宛的正式驾照，只需要参加爱尔兰的驾照理论考试就可以直接换发爱尔兰全驾照（Full licence），具体可以联系爱尔兰交通部门咨询。","text":"爱尔兰承认中国驾照吗不承认。当然很久之前我也从网上看到过一条消息，说中国大陆驾照经过翻译认证可以在爱尔兰驾驶一年，这个没有亲测过，所以不推荐遵循这条消息。官方的解释是需要考取理论驾照、全驾照，不承认中国大陆驾照。如果你有其它国家的驾照，特别是EU国家，就有区别了。班上有个立陶宛的同学，他有立陶宛的正式驾照，只需要参加爱尔兰的驾照理论考试就可以直接换发爱尔兰全驾照（Full licence），具体可以联系爱尔兰交通部门咨询。 淘宝办个国际驾照靠谱吗淘宝有许多协助办理国际驾照的，美国什么blabla协会认证的国际驾照，都是骗人的，根本没有法律效力。去台湾旅游租车有可能成功，但是在爱尔兰只要警察较真一点，就麻烦了。也有人想通过香港驾照来办理，目前香港驾照的政策是这样的：如果你拥有大陆驾照，可以在香港交管部门免费换发香港驾照，也可通过淘宝代办，就像代办签证一样交个手续费就ok。但是拿到香港驾照只是允许你在香港驾驶机动车，如果想拿国际驾照，需要是香港常住居民才可以换发国际驾照。so…不要想了，除非你去香港工作180天拿到临时身份证。 如何考取驾照为了避免一些不必要的麻烦，还是在爱尔兰考一个驾照比较靠谱。爱尔兰驾照分为两部分：理论驾照和正式驾照。理论驾照只需要报名参加理论考试，考试通过当场发证。正式驾照需要在理论驾照发证6各月之后才可以报名，而且在报名时已经上完至少12课时的驾驶课程。 考完理论可以上路吗可以的。爱尔兰交规要求，拥有理论驾照（L牌）的驾驶员需要由拥有2年以上正式驾照的人陪同才可以上路，并且不允许上高速公路，还要在前后车窗贴有白底红字的L标示。和目前国内的有点类似。 驾照的费用是多少理论考试的费用是45欧元（B&amp;W），12课时的费用大概是400欧，一次性报12节有优惠，正式路考是85欧元。 理论驾照有有效期吗有的。理论驾照有效期为2年，2年之内需要参加正式驾照的路考。超过两年需要重新参加理论考试。 具体流程是什么针对Carlow地区，其它地方去当你相关机构就ok，流程是一样的。 1.报名考试 1.1报名方式为网上报名（https://eu-securereg3.prometric.com/programinformation.aspx?mode=schedule），网上付款45欧。 1.2所需材料：PPSN（税卡）、护照、护照尺寸照片一张（理论考试时携带，通过后当场发证需要这张照片） 1.2.1附carlow地区PPSN办理流程 1.2.1.1.去学校International Office开一个证明信，申请表用途上勾选ppsn，两天后就可以拿到了。 1.2.1.2.Bank Statement。如果有其它可以证明住址的账单也可以，我就是使用网费账单。 1.2.1.3.去税局预约。Carlow税局在邮局旁边，Penneys对面，相当于国内的民政局，许多希望政府帮忙找工作、领取救济福利都在这里。像银行取号一样排队，然后在reception告诉工作人员你想预约一个时间办理ppsn。 1.2.1.4.在预约时间携带护照、学校证明信、账单、护照尺寸照片2张、GNIB卡。当然如果你同时把护照和GNIB卡的复印件也带去会节省很多时间。 1.2.1.5.预约时间到税局就不用取号了，直接去柜台就可以。将所有材料交齐、填写申请表，然后会去里面的单间拍照、签字，还会要求你设置两个密保问题。（密保问题只能在其提供的10个问题里选两个，无法自定义问题 = =，而且那些问题比较坑，比如你第一个孩子的Middle Name是什么。比较简单问题是你最喜欢的运动、第一个工作地点。） 1.2.1.6.办完之后大概3个工作日会收到一封信上面是你的ppsn，再过2个工作日会收到卡。打信上的电话并回答密保问题就可以激活pps卡了。 1.3.Carlow地区理论考试大概是每个月两次，也有个别月份整个月都不设置考试。考试日有许多时间可以选，比如15：45、16：15什么的，根据自己的时间预约。超过预约时间30分钟无法参加考试，建议提前15分钟到达。 1.4.考试地点是在Seven Oaks Hotel后面的停车场最角落里。木有错，是一辆考试车。整个车只有一个工作人员！！！她告诉我她从Cork一个人开考试车过来，每过一段时间会轮换城市。记得带护照和护照照片，我就忘带护照照片了，还要回家拿然后打车又去的。我跟司机说开到里面的停车场吧，司机就问我是不是来考驾照的哈哈哈，下车还说祝你好运，好有内心戏！ 1.5.检查完证件会要求你关闭手机，把个人物品存箱，在考试信息上核对个人信息。还会问你需要听机器朗读考试须知还是自己阅读，我说自己看吧。然后工作人员会领你进考试间，系统开始会询问你是否需要阅读考试须知，我直接跳过做题了。 1.6.考完当场出成绩，40道题35题Pass。然后签字，提供护照尺寸照片就给你发证了，同时会给你一个考试报告，告诉你错的题目属于交规哪些章节，既然过了就不用care了… 2.复习 2.1这部分其实应该放在报名之前的。学习理论可以去书店买，17.5欧。我们只需要阅读第1、2章就可以了，第三章是给考摩托车驾照的人看的。 2.2.模拟。整本书看完就可以在网上模拟题库试试了。爱尔兰有很多模拟理论考试网站，在这里推荐http://theory-tester.com/如果想每次保存考试成绩，可以通过facebook登录或者注册账号。不注册无法查看以前的模拟成绩。","categories":[],"tags":[{"name":"留学生活","slug":"留学生活","permalink":"https://jerryshao.com/tags/留学生活/"}]}]}